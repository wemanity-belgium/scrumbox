package com.wemanity.scrumbox.android.db.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.wemanity.scrumbox.android.db.dao.impl.DailyDao;
import com.wemanity.scrumbox.android.db.dao.impl.DailyOccurrenceDao;
import com.wemanity.scrumbox.android.db.dao.impl.MemberDao;
import com.wemanity.scrumbox.android.db.dao.impl.ParticipantDao;
import com.wemanity.scrumbox.android.db.dao.impl.ParticipationDao;
import com.wemanity.scrumbox.android.db.dao.impl.RoleDao;
import com.wemanity.scrumbox.android.db.entity.Daily;
import com.wemanity.scrumbox.android.db.entity.Role;
import com.wemanity.scrumbox.android.db.entity.Member;
import com.wemanity.scrumbox.android.db.entity.Participant;
import com.wemanity.scrumbox.android.db.entity.DailyOccurrence;
import com.wemanity.scrumbox.android.db.entity.Participation;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig dailyDaoConfig;
    private final DaoConfig roleDaoConfig;
    private final DaoConfig memberDaoConfig;
    private final DaoConfig participantDaoConfig;
    private final DaoConfig dailyOccurrenceDaoConfig;
    private final DaoConfig participationDaoConfig;

    private final DailyDao dailyDao;
    private final RoleDao roleDao;
    private final MemberDao memberDao;
    private final ParticipantDao participantDao;
    private final DailyOccurrenceDao dailyOccurrenceDao;
    private final ParticipationDao participationDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        dailyDaoConfig = daoConfigMap.get(DailyDao.class).clone();
        dailyDaoConfig.initIdentityScope(type);

        roleDaoConfig = daoConfigMap.get(RoleDao.class).clone();
        roleDaoConfig.initIdentityScope(type);

        memberDaoConfig = daoConfigMap.get(MemberDao.class).clone();
        memberDaoConfig.initIdentityScope(type);

        participantDaoConfig = daoConfigMap.get(ParticipantDao.class).clone();
        participantDaoConfig.initIdentityScope(type);

        dailyOccurrenceDaoConfig = daoConfigMap.get(DailyOccurrenceDao.class).clone();
        dailyOccurrenceDaoConfig.initIdentityScope(type);

        participationDaoConfig = daoConfigMap.get(ParticipationDao.class).clone();
        participationDaoConfig.initIdentityScope(type);

        dailyDao = new DailyDao(dailyDaoConfig, this);
        roleDao = new RoleDao(roleDaoConfig, this);
        memberDao = new MemberDao(memberDaoConfig, this);
        participantDao = new ParticipantDao(participantDaoConfig, this);
        dailyOccurrenceDao = new DailyOccurrenceDao(dailyOccurrenceDaoConfig, this);
        participationDao = new ParticipationDao(participationDaoConfig, this);

        registerDao(Daily.class, dailyDao);
        registerDao(Role.class, roleDao);
        registerDao(Member.class, memberDao);
        registerDao(Participant.class, participantDao);
        registerDao(DailyOccurrence.class, dailyOccurrenceDao);
        registerDao(Participation.class, participationDao);
    }
    
    public void clear() {
        dailyDaoConfig.getIdentityScope().clear();
        roleDaoConfig.getIdentityScope().clear();
        memberDaoConfig.getIdentityScope().clear();
        participantDaoConfig.getIdentityScope().clear();
        dailyOccurrenceDaoConfig.getIdentityScope().clear();
        participationDaoConfig.getIdentityScope().clear();
    }

    public DailyDao getDailyDao() {
        return dailyDao;
    }

    public RoleDao getRoleDao() {
        return roleDao;
    }

    public MemberDao getMemberDao() {
        return memberDao;
    }

    public ParticipantDao getParticipantDao() {
        return participantDao;
    }

    public DailyOccurrenceDao getDailyOccurrenceDao() {
        return dailyOccurrenceDao;
    }

    public ParticipationDao getParticipationDao() {
        return participationDao;
    }

}
