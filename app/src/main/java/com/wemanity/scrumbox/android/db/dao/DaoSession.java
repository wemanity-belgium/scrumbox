package com.wemanity.scrumbox.android.db.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.wemanity.scrumbox.android.db.dao.impl.DailyGreenDao;
import com.wemanity.scrumbox.android.db.dao.impl.DailyOccurrenceGreenDao;
import com.wemanity.scrumbox.android.db.dao.impl.MemberGreenDao;
import com.wemanity.scrumbox.android.db.dao.impl.ParticipantGreenDao;
import com.wemanity.scrumbox.android.db.dao.impl.ParticipationGreenDao;
import com.wemanity.scrumbox.android.db.dao.impl.RoleGreenDao;
import com.wemanity.scrumbox.android.db.entity.Daily;
import com.wemanity.scrumbox.android.db.entity.Role;
import com.wemanity.scrumbox.android.db.entity.Member;
import com.wemanity.scrumbox.android.db.entity.Participant;
import com.wemanity.scrumbox.android.db.entity.DailyOccurrence;
import com.wemanity.scrumbox.android.db.entity.Participation;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig dailyDaoConfig;
    private final DaoConfig roleDaoConfig;
    private final DaoConfig memberDaoConfig;
    private final DaoConfig participantDaoConfig;
    private final DaoConfig dailyOccurrenceDaoConfig;
    private final DaoConfig participationDaoConfig;

    private final DailyGreenDao dailyDao;
    private final RoleGreenDao roleDao;
    private final MemberGreenDao memberDao;
    private final ParticipantGreenDao participantDao;
    private final DailyOccurrenceGreenDao dailyOccurrenceDao;
    private final ParticipationGreenDao participationDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        dailyDaoConfig = daoConfigMap.get(DailyGreenDao.class).clone();
        dailyDaoConfig.initIdentityScope(type);

        roleDaoConfig = daoConfigMap.get(RoleGreenDao.class).clone();
        roleDaoConfig.initIdentityScope(type);

        memberDaoConfig = daoConfigMap.get(MemberGreenDao.class).clone();
        memberDaoConfig.initIdentityScope(type);

        participantDaoConfig = daoConfigMap.get(ParticipantGreenDao.class).clone();
        participantDaoConfig.initIdentityScope(type);

        dailyOccurrenceDaoConfig = daoConfigMap.get(DailyOccurrenceGreenDao.class).clone();
        dailyOccurrenceDaoConfig.initIdentityScope(type);

        participationDaoConfig = daoConfigMap.get(ParticipationGreenDao.class).clone();
        participationDaoConfig.initIdentityScope(type);

        dailyDao = new DailyGreenDao(dailyDaoConfig, this);
        roleDao = new RoleGreenDao(roleDaoConfig, this);
        memberDao = new MemberGreenDao(memberDaoConfig, this);
        participantDao = new ParticipantGreenDao(participantDaoConfig, this);
        dailyOccurrenceDao = new DailyOccurrenceGreenDao(dailyOccurrenceDaoConfig, this);
        participationDao = new ParticipationGreenDao(participationDaoConfig, this);

        registerDao(Daily.class, dailyDao);
        registerDao(Role.class, roleDao);
        registerDao(Member.class, memberDao);
        registerDao(Participant.class, participantDao);
        registerDao(DailyOccurrence.class, dailyOccurrenceDao);
        registerDao(Participation.class, participationDao);
    }
    
    public void clear() {
        dailyDaoConfig.getIdentityScope().clear();
        roleDaoConfig.getIdentityScope().clear();
        memberDaoConfig.getIdentityScope().clear();
        participantDaoConfig.getIdentityScope().clear();
        dailyOccurrenceDaoConfig.getIdentityScope().clear();
        participationDaoConfig.getIdentityScope().clear();
    }

    public DailyGreenDao getDailyDao() {
        return dailyDao;
    }

    public RoleGreenDao getRoleDao() {
        return roleDao;
    }

    public MemberGreenDao getMemberDao() {
        return memberDao;
    }

    public ParticipantGreenDao getParticipantDao() {
        return participantDao;
    }

    public DailyOccurrenceGreenDao getDailyOccurrenceDao() {
        return dailyOccurrenceDao;
    }

    public ParticipationGreenDao getParticipationDao() {
        return participationDao;
    }

}
